@page

@model contextual_notes.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}


<input type="button"  value="Add New" onclick="$('#createForm').toggle()" id="AddBtn"/>

<form asp-page-handler="Create" method="post">
    @Html.DropDownListFor(x => x.CollectionName, new SelectList(@Model.Collections, "", ""), "Select Collection", new { onchange = "SelectedIndexChanged()", id = "ddlCollection" })

    <div id="createForm" style="display:none">

        <label> Url:</label>
        <input asp-for="NoteItem.Url" />
        <label> Notes:</label>

        <input asp-for="NoteItem.Comments" />
        <label>Is this a tutorial? </label>

        <input asp-for="NoteItem.Tutorial" type="checkbox" />
        <input type="submit" value="Save" class="btn btn-default" />
    </div>

</form>


<table id="noteTable">
    <thead>

    </thead>
</table>

<form>
    <input name="__RequestVerificationToken" type="hidden" value="CfDJ8KW5cuB058RCnNyZSLI7AUjUAtTwe54jQ4Z9Goyn3WKPcpVFYSFUM5J-JDFC3E-MZIUcyR0UnbrvrC_sHv6MbUONStuIMhqDc7i00pQiGkrzf3hK6t5gZFVrjUpyAcargow4zvKU_ISjdPfoLTNF588" />
</form>



<script type="text/javascript">

    function SelectedIndexChanged() {
         
        var select = $("#ddlCollection option:selected").text();
  
        $.ajax({
            type: "GET",
            url: "/Index/?handler=List&selectedCollection=" + select,
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                $('th').remove();
                $('tr').remove();

                var staticFields = ["Edit", "Delete"];
                var tr = $('<tr></tr>');
                $('#noteTable > thead').append(tr);
                var head = $('#noteTable > thead tr');
                var table = $('#noteTable');
                var fields = JSON.parse(response);


                for (x in staticFields) {
                    head.append('<th>' + staticFields[x] + '</th>');
                }

                for (x in fields[0]) {
                    head.append('<th>' + x + '</th>');
                }

            
                table.dynatable({
                    features: {
                        paginate: false,
                        search: false,
                        recordCount: false
                    },
                    bodyRowSelector: 'tr',
                    writers: {
                        edit: function (record) {
                            var editCommand = "<a href=Edit/" + select + "/" + record.id + ">Edit</a>"
                            return editCommand;
                        },
                        delete: function (record) {
                            var deleteCommand = "<a href=/Index/?handler=Delete&recordId=" + record.id.trim() + "&collection=" + select + ">Delete</a>"
                            return deleteCommand;

                        }
                    },
                    dataset: {
                        records: fields
                    }
                });

                table.data('dynatable').dom.update();
            },
            failure: function (response) {
                alert(response);
            }
        });
    }



</script>  